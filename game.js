// Initialize variables
var buttonColors = ["red", "blue", "green", "yellow"]; // an array of possible colors
var gamePattern = []; // an empty array to store the pattern generated by the computer
var userClickedPattern = []; // an empty array to store the pattern clicked by the user
var level = 0; // initialize the level to 0

// Set initial h1 title and start game on keydown
$("#level-title").text("Press A Key to Start");
$("body").one("keydown", function () {
    nextSequence();
    $("#level-title").text("Level " + level);
});

// Handle user clicks on color buttons
$(".btn").click(function () {
    var userChosenColor = $(this).attr('id'); // get the id of the clicked color button
    userClickedPattern.push(userChosenColor); // add the clicked color to the user's pattern array
    playSound(userChosenColor); // play the sound associated with the clicked color
    animatePress(userChosenColor); // animate the button press
    checkAnswer(userClickedPattern.length - 1); // check the answer with the index of the last element in the user's pattern array
});

// Generate next sequence of colors and update the level
function nextSequence() {
    level++; // increment the level
    $("h1").text("Level " + level); // update the h1 title with the new level
    var randomNumber = Math.floor(Math.random() * 4); // generate a random number between 0 and 3
    var randomChosenColor = buttonColors[randomNumber]; // get the color associated with the randomly generated number
    gamePattern.push(randomChosenColor); // add the generated color to the game's pattern array

    // animate the button press of the generated color
    $("#" + randomChosenColor).fadeIn(100).fadeOut(100).fadeIn(100);

    playSound(randomChosenColor); // play the sound associated with the generated color
}

// Play sound for a given name
function playSound(name) {
    var audio = new Audio("sounds/" + name + ".mp3"); // create an audio element for the given name
    audio.play(); // play the audio
}

// Animate the button press for a given color
function animatePress(currentColor) {
    $("#" + currentColor).addClass("pressed"); // add a CSS class to animate the button press
    setTimeout(function () {
        $("#" + currentColor).removeClass("pressed"); // remove the CSS class after a delay
    }, 100);
}

function checkAnswer(currentLevel) {
    // check if the user's most recent answer is the same as the game pattern
    if (userClickedPattern[currentLevel] === gamePattern[currentLevel]) {
        // check if the user has finished their sequence
        if (userClickedPattern.length === gamePattern.length) {
            // delay the next sequence by 1000 milliseconds
            setTimeout(function () {
                nextSequence();
            }, 1000);
            // reset the user's pattern to an empty array
            userClickedPattern = [];
        }
    } else {
        // if the user's answer is incorrect, play the wrong answer sound and add a red flash to the body
        playSound("wrong");
        $("body").addClass("game-over");
        setTimeout(function () {
            $("body").removeClass("game-over");
        }, 200);
        // update the h1 title to show the user their score and restart the game
        $("h1").text("Game Over, Press Any Key to Restart");
        startOver();
    }
}

function startOver() {
    level = 0;
    gamePattern = [];
    started = false;
  
    $("#level-title").text("Game Over, Press Any Key to Restart");
    $("body").one("keydown", function () {
      level = 0;
      gamePattern = [];
      userClickedPattern = [];
      nextSequence();
      $("#level-title").text("Level " + level);
    });
  }  